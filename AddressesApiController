namespace Web.Controllers.Api
{
    [RoutePrefix("api/addresses")]
    public class AddressesApiController : ApiController
    {
        private IAddressService _service;
        public IUserService _userService = null;

        public AddressesApiController(IAddressService svc, IUserService UserService)
        {
            _service = svc;
            _userService = UserService;
        }

        [Route, HttpPost]
        public HttpResponseMessage Add(AddressAddRequest model)
        {
            string userId = _userService.GetCurrentUserId();

            if (!ModelState.IsValid)
            {
                return Request.CreateErrorResponse(HttpStatusCode.BadRequest, ModelState);
            }

            ItemResponse<int> response = new ItemResponse<int>();

            response.Item = _service.Insert(model, userId);

            return Request.CreateResponse(response);
        }

        [Route("{id:int}"), HttpPut]
        public HttpResponseMessage Update(AddressUpdateRequest model)
        {
            if (!ModelState.IsValid)
            {
                return Request.CreateErrorResponse(HttpStatusCode.BadRequest, ModelState);
            }
            _service.Update(model);
            SuccessResponse response = new SuccessResponse();

            return Request.CreateResponse(response);
        }

        [Route, HttpGet]
        public HttpResponseMessage Get()
        {
            ItemsResponse<Address> response = new ItemsResponse<Address>();

            response.Items = _service.GetAll();

            return Request.CreateResponse(response);
        }

        [Route("{id:int}"), HttpGet]
        public HttpResponseMessage GetByID(int id)
        {
            ItemResponse<Address> response = new ItemResponse<Address>();

            response.Item = _service.GetById(id);

            return Request.CreateResponse(response);

        }

        [Route("{id:int}"), HttpDelete]
        public HttpResponseMessage DeleteByID(int id)
        {
            _service.DeleteById(id);

            SuccessResponse response = new SuccessResponse();

            return Request.CreateResponse(response);

        }
