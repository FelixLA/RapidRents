@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<style>

    .urgency{
        font-size: 16px;
    }

    .disc{
        font-size: 22px;
    }
    .tile-header{
        height: 26px;
    }

</style>


<div class="row">
    <div class="">
        <div class="panel panel-default">
            <div class="panel-body"
                 data-ng-controller="addressController as ac" id="addressController">

                <div class="row">
                    <div class="content-box-wrapper col-md-6" ng-repeat="address in ac.items track by address.id">
                        <div class="panel-body">
                            <div class="id">{{address.id}}</div>
                            <div class="line1">{{address.line1}}</div>
                            <div class="line2">{{address.line2}}</div>
                            <div>
                                <span class="city">{{address.city}}</span>, <span class="stateId">
                                    {{address.stateProvinceCode}}
                                </span> <span class="zipcode"> {{address.zipCode}}</span>
                            </div>
                        </div>

                        <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-expanded="true">
                            Maintenance
                            <span class="caret"></span>
                            <div class="ripple-wrapper"></div>
                        </button>
                        <div class="dropdown-backdrop"></div>
                        <ul class="dropdown-menu" role="menu">
                            <li>
                                <a href="#" ng-click="ac.openMRModal(address)"><i class="glyph-icon icon-wrench"> </i>New Maintenance Request</a>
                            </li>
                            <li>
                                <a href="#" ng-click="ac.getMaintReq(address)">View Maintenance Request</a>
                            </li>
                        </ul>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





@*Request Modal html*@
<script type="text/ng-template" id="modalMRContent.html">

    <form class="form-group" id="maintenanceForm" name="mMRc.maintenanceForm" ng-submit="mMRc.ok()" role="form">
        <div class="modal-header">
            <h3 class="modal-title">New Maintenance Request</h3>
        </div>
        <div class="modal-body">
            <div hidden>
                {{mMRc.maintReqObj}}
            </div>

            <div class="form-group">
                <label class="col-sm-3 lable">Name</label>
                <div class="col-sm-6">
                    <input type="text" class="form-control"
                           ng-class="{'error': mMRc.shownewMRFormErrors && !mMRc.maintenanceForm.name.$valid}"
                           placeholder="name"
                           name="name"
                           id="name"
                           ng-model="mMRc.maintReqObj.name"
                           ng-minlength="2"
                           ng-maxlength="50"
                           required />
                    <div role="alert" class="help-inline error">
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.name.$error.required">Name is required</span>
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.name.$error.minlength">Name must be at least 2 characters</span>
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.name.$error.maxlength">Name must be 50 characters or less</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 control-label">Unit/Apt Number</label>
                <div class="col-sm-6">
                    <input type="text" class="form-control"
                           placeholder="Unit/Apt Number"
                           name="UnitNumber"
                           id="UnitNumber"
                           disabled="disabled"
                           ng-model="mMRc.maintReqObj.UnitNumber" />
                </div>               
            </div>

            <div class="form-group">
                <label class="col-md-3 control-label">Urgency</label>
                <div class="col-sm-6">
                    <select class="form-control" id="urgency" ng-model="mMRc.maintReqObj.urgencyId" name="urgency">
                        <option value="">Select Urgency</option>
                        <option value="1">Low</option>
                        <option value="2">Medium</option>
                        <option value="3">High</option>
                    </select>
                </div>
            </div>

            <div class="form-group" hidden>
                <label class="col-sm-3 lable">Status</label>
                <div class="col-sm-6">
                    <input type="text" class="form-control"
                           placeholder="Status"
                           name="status"
                           id="status"
                           ng-model="mMRc.maintReqObj.status" />
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 lable">Subject</label>
                <div class="col-sm-6">
                    <input type="text" class="form-control"
                           ng-class="{'error': mMRc.shownewMRFormErrors && !mMRc.maintenanceForm.subject.$valid}"
                           placeholder="Subject"
                           name="subject"
                           id="subject"
                           ng-model="mMRc.maintReqObj.subject"
                           ng-minlength="2"
                           ng-maxlength="50"
                           required />
                    <div role="alert" class="help-inline error">
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.subject.$error.required">Subject is required</span>
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.subject.$error.minlength">Subject must be at least 2 characters</span>
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.subject.$error.maxlength">Subject must be 50 characters or less</span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-3 lable">Description</label>
                <div class="col-sm-12">
                    <textarea type="text" class="form-control  "
                              ng-class="{'error': mMRc.shownewMRFormErrors && !mMRc.maintenanceForm.description.$valid}"
                              rows="5"
                              placeholder="Brief description..."
                              name="description"
                              id="description"
                              ng-model="mMRc.maintReqObj.description"
                              ng-minlength="2"
                              ng-maxlength="300"
                              required />
                    <div role="alert" class="help-inline error">
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.description.$error.required">Description is required</span>
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.description.$error.minlength">Description must be at least 2 characters</span>
                        <span class="error" ng-show="mMRc.shownewMRFormErrors && mMRc.maintenanceForm.description.$error.maxlength">Description must be 300 characters or less</span>
                    </div>
                </div>
            </div>

        </div>
        <div class="modal-footer">
            <button type="submit" id="submitReq" class="btn btn-primary">Submit Request</button>
            <button type="button" id="cancelReq" class="btn btn-warning" ng-click="mMRc.cancel()">Cancel</button>
        </div>
    </form>
</script>





@*List Modal html*@
<script type="text/ng-template" id="modalListContent.html">
    <div class="modal-header">
        <h3 class="modal-title">Maintenance Request</h3>
    </div>
        <div>
            <div class="modal-body col-sm-12">

                <div class="tile-box" ng-repeat="item in mlc.items">
                    <div ng-random-class ng-classes="mlc.classes">
                        <div class="tile-header" style="resize: both">
                            <div class="repeatContent float-left">{{item.subject}}</div>
                            <div class="repeatContent float-right">Unit:   {{item.unit_No}}</div>
                        </div>
                        <div tile-content-wrapper>
                            <div class="tile-content">
                                <div class="repeatContent disc" style="text-align:center">{{item.description}}</div>

                                <div>
                                    <div class="repeatContent float-left urgency">
                                        Urgency:
                                        <p ng-show="item.urgencyId == 1">Low</p>
                                        <p ng-show="item.urgencyId == 2">Meduim</p>
                                        <p ng-show="item.urgencyId == 3">High</p>
                                    </div>
                                    
                                    <span class="small-label badge-yellow status" ng-show="item.status == 1">Submitted</span>
                                    <span class="small-label badge-success status" ng-show="item.status == 2">Open</span>
                                    <span class="small-label badge-primary status" ng-show="item.status == 3">Closed</span>
                                    
                                </div>
                            </div>
                            <div class="tile-footer">
                                <div class="repeatContent float-right float-left">Added:   {{item.dateAdded | date}}</div>
                                <div class="repeatContent">Requested by:   {{item.name}}</div>
                                <div class="repeatContent float-right">Modified:   {{item.dateModified | date}}</div>
                                <div class="repeatContent">Request Id:   {{item.id}}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    <div class="modal-footer">
        <button class="btn btn-warning" ng-click="mlc.cancel()">Close</button>
    </div>
    
</script>



@section scripts
{
    <script src="~/Scripts/sabio.services.address.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/sabio.services.maintenancerquest.js"></script>

    <script type="text/javascript">


        (function () {
            "use strict";

            angular.module(APPNAME)
                .factory('$addressService', addressServiceFactory);

            addressServiceFactory.$inject = ['$baseService'];

            function addressServiceFactory($baseService) {

                var aAddressServiceObject = sabio.services.address;

                var newService = $baseService.merge(true, {}, aAddressServiceObject, $baseService);

                return newService;
            }
        })();
		

        (function () {
            "use strict";

            angular.module(APPNAME)
                    .factory('$maintReqService', MaintReqServiceFactory);

            MaintReqServiceFactory.$inject = ['$baseService', '$sabio', ];

            function MaintReqServiceFactory($baseService, $sabio) {

                var aMntnceRquestObject = sabio.services.maintenanceRequest;

                var newService = $baseService.merge(true, {}, aMntnceRquestObject, $baseService);

                return newService;
            }
        })();


        (function () {
            "use strict";

            angular.module(APPNAME)
                .controller('addressController', AddressController);

            AddressController.$inject = ['$scope', '$baseController', '$addressService', '$uibModal', '$maintReqService'];

            function AddressController(
                $scope
                , $baseController
                , $addressService
                , $uibModal
                , $maintReqService

                ) {


                var vm = this;
                vm.items = [];
                vm.address = null;                
                vm.maintReqs = null;

                $.extend(vm, $baseController);

                vm.address = {};

                vm.addressId = null;

                vm.showFormErrors = false;                

                vm.$maintReqService = $maintReqService;                
                vm.$addressService = $addressService;
                vm.onAddressError = _onAddressError;
                vm.onAddressSuccess = _onAddressSuccess;
                vm.$scope = $scope;

                vm.receiveItems = _receiveItems;

                vm.$uibModal = $uibModal;
                vm.openMRModal = _openMRModal;
                vm.openListModal = _openListModal;
                
                vm.addRequest = _addRequest;
                vm.addSuccess = _addSuccess;
                vm.addError = _addError;
                vm.onRequestToAddMRO = _onRequestToAddMRO;

                vm.getMaintReq = _getMaintReq;
                vm.onReqSuccess = _onReqSuccess;
                vm.onReqError = _onReqError;

                vm.fireAlert = _fireAlert

                $baseController.merge(vm, $baseController);

                vm.notify = vm.$addressService.getNotifier($scope);
                
                render();

                function render() {
                    vm.$addressService.get(vm.receiveItems, vm.onAddressSuccess, vm.onAddressError);                    
                }

                function _onAddressSuccess(data, status, xhr) {
                    vm.$log.log(data.item);                    
                }

                function _onAddressError(jqXhr, error) {
                    vm.$log.log(error);
                    vm.fireAlert('error', 'Try again', 'Insert failed');
                }

                function _receiveItems(data) {
                    vm.notify(function () {
                        vm.items = data.items;
                    });
                }                
               


                ///Add Request Modal

                function _openMRModal(address) {

                    var modalInstance = vm.$uibModal.open({
                        animation: true,
                        templateUrl: 'modalMRContent.html',
                        controller: 'modal_MR_Controller as mMRc',
                        size: 'sm',
                        resolve: {
                            targetAddress: function () {
                                return address;

                            }
                        }
                    });

                    console.log(address.id);

                    modalInstance.result.then(_onRequestToAddMRO, _onReqDismissed);

                }


                function _onRequestToAddMRO(selectedItem, targetAddress) {

                    vm.modalSelected = selectedItem;//mro

                    vm.addRequest(vm.modalSelected);

                }

                function _addRequest(mro) {

                    $maintReqService.addressId(mro, vm.addSuccess, vm.addError);

                };

                function _onReqDismissed() {
                    console.log('Modal dismissed at: ' + new Date());
                }

                function _addSuccess() {
                    vm.fireAlert('success', 'Maintenance request added to database', 'Insert successful');
                    vm.showFormErrors = false;
                }

                function _addError() {
                    vm.fireAlert('error', 'Try again', 'Insert failed')
                }


                function _getMaintReq(address) {
                    console.log(address.id);
                    vm.addressId = address.id;
                    vm.$maintReqService.getByAddressId(vm.addressId, vm.onReqSuccess, vm.onReqError);
                }

                function _onReqSuccess(data, status, xhr) {

                    if (data.items === null) {
                        vm.$log.log("Item is null");
                        vm.fireAlert('error', 'No requests for this address', 'Null item')
                    } else {

                        vm.maintReqs = data.items;
                        vm.$log.log(vm.maintReqs);
                        vm.openListModal();
                    }
                }

                function _onReqError(jqXhr, error) {
                    vm.$log.log(Error);
                }

                function _fireAlert(type, message, header) {
                    vm.$alertService[type](message, header);
                }



                /// List Request Modal

                function _openListModal() {

                    var modalInstance = vm.$uibModal.open({
                        animation: true,
                        templateUrl: 'modalListContent.html',
                        controller: 'modalListController as mlc',
                        size: 'sm',
                        resolve: {

                            items: function () {

                                return vm.maintReqs;
                            }
                        }
                    });
                }
            }
        })();





        /// Request Modal Ctrl
        (function () {
            "use strict";

            angular.module(APPNAME)
                .controller('modal_MR_Controller', ModalMR_Controller);

            ModalMR_Controller.$inject = ['$scope', '$baseController', '$uibModalInstance', 'targetAddress']

            function ModalMR_Controller(
                $scope
                , $baseController
                , $uibModalInstance
                , targetAddress
                ) {

                var vm = this;

                vm.showFormErrors = false;

                $baseController.merge(vm, $baseController);

                vm.$scope = $scope;
                vm.targetAddress = targetAddress;
                vm.maintReqObj = {};
                vm.maintenanceForm = null;
                vm.$uibModalInstance = $uibModalInstance;


                render()

                function render() {
                    vm.maintReqObj.UnitNumber = vm.targetAddress.line2;
                    vm.maintReqObj.id = vm.targetAddress.id;                    
                    vm.maintReqObj.status = "1";
                }

                vm.ok = function () {
                    vm.showFormErrors = true;
                    if (vm.maintenanceForm.$valid) {
                        console.log('valid');
                        vm.$uibModalInstance.close(vm.maintReqObj, vm.targetAddress);

                    }
                    console.log(vm.maintReqObj);
                };

                vm.cancel = function () {
                    confirm("Confirm cancel");
                    vm.$uibModalInstance.dismiss('cancel');
                };
            }
        })();




        /// List Modal Ctrl
        (function () {
            "use strict";

            angular.module(APPNAME)
                .controller('modalListController', ModalListController);

            ModalListController.$inject = ['$scope', '$baseController', '$uibModalInstance', 'items']

            function ModalListController(
                $scope
                , $baseController
                , $uibModalInstance
                , items
                ) {

                var vm = this;
                vm.items = items;

                $baseController.merge(vm, $baseController);

                vm.$scope = $scope;
                vm.$uibModalInstance = $uibModalInstance;
                vm.maintReqObj = {};

                vm.urgencyList =
                [
                { urgencyId: 1, urgencyName: "Low" },
                { urgencyId: 2, urgencyName: "Medium" },
                { urgencyId: 3, urgencyName: "High" }
                ];

                vm.statusList =
                [
                { statusId: 1, statusName: "Submitted" },
                { statusId: 2, statusName: "Open" },
                { statusId: 3, statusName: "Closed" }
                ];

                vm.ok = function () {
                    vm.$uibModalInstance.close(vm.selected.items);

                };

                vm.cancel = function () {
                    vm.$uibModalInstance.dismiss('cancel');
                };


                vm.classes = [
                    "bg-primary",
                    "bg-black",
                    "bg-purple",
                    "bg-red",
                    "bg-blue"
                ];
            }
        })();
		

        (function () {
            angular.module(APPNAME)
            .directive("ngRandomClass", function () {
                return {
                    restrict: 'EA',
                    replace: false,
                    scope: {
                        ngClasses: "="
                    },
                    link: function (scope, elem, attr) {

                        elem.addClass(scope.ngClasses[Math.floor(Math.random() * (scope.ngClasses.length))]);
                    }
                }
            }
            )
        })();


    </script>
}
